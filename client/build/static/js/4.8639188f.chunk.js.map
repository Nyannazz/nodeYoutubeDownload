{"version":3,"sources":["api/api.js","components/Searchbar.jsx","components/Loading.jsx","components/Banner.jsx","components/VideoCard.jsx","components/FormatItem.jsx","components/FormatList.jsx","components/FormatSelect.jsx","components/Error.jsx","components/VideoView.jsx","components/Downloader.jsx"],"names":["BASEURL","downloaderUrl","getVideoData","videoUrl","a","fetch","response","status","Error","json","downloadVideo","itag","name","metadata","progressCallback","progress","console","log","doneCallBack","axios","url","method","responseType","onDownloadProgress","progressEvent","loaded","then","container","format","saveAs","Blob","data","Date","now","catch","error","downloadMp3","mp3Data","writer","ID3Writer","title","artist","cover","setFrame","addTag","blob","getBlob","downloadMp3Fast","getFileSize","searchVideo","query","page","ok","statusText","Searchbar","onSubmit","placeholder","match","useState","inputVal","setInputVal","useEffect","params","decodeURIComponent","event","preventDefault","id","className","value","onChange","target","type","required","Loading","Banner","text","alt","src","icon","VideoCard","thumbnail","length","toFixed","FormatItem","audioBitrate","qualityLabel","onDownload","href","onClick","FormatList","formats","convertMp3","map","item","index","key","FormatSelect","formatList","onDownloadMp3","formatTab","setFormatTab","audioFormats","filter","videoFormats","videoOnlyFormats","message","children","VideoView","history","video","setVideo","setError","push","timeout","searchState","setSearch","clearTimeout","onSearchSubmit","ytID","getYoutubeID","setTimeout","path","render","props"],"mappings":"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","file":"static/js/4.8639188f.chunk.js","sourcesContent":["import ID3Writer from 'browser-id3-writer'\r\nimport {\r\n  saveAs\r\n} from 'file-saver'\r\nimport axios from 'axios'\r\n//const BASEURL = \"http://localhost:5000/api\" /*  || \"http://82.165.121.77:5000\" */\r\nconst BASEURL=\"/api\"\r\nconst downloaderUrl = BASEURL + \"/ytdl\"\r\nconst searchUrl = BASEURL + \"/search\"\r\nconst downloadProxyUrl = BASEURL + \"/dlproxy\"\r\n\r\nexport async function getVideoData(videoUrl) {\r\n  const response = await fetch(`${downloaderUrl}/simpleinfo?videolink=${videoUrl}`);\r\n  if (response.status >= 400) throw new Error(response)\r\n  return await response.json();\r\n\r\n}\r\n\r\n\r\n\r\nexport function downloadVideo(videoUrl, itag, name, metadata, progressCallback = (progress) => console.log(progress), doneCallBack = (progress) => console.log(progress)) {\r\n  axios({\r\n    url: `${downloaderUrl}/download?videolink=${videoUrl}${itag?`&format=${itag}`:\"\"}`,\r\n    method: \"GET\",\r\n    responseType: \"arraybuffer\",\r\n    onDownloadProgress: metadata ? (progressEvent) => {\r\n      console.log(progressEvent.loaded)\r\n      progressCallback(progressEvent.loaded)\r\n    } : null\r\n  }).then((response) => {\r\n    const container = metadata ? metadata.format.container : \"mp4\"\r\n    saveAs(new Blob([response.data]), name ? `${name}.${container}` : `video${Date.now()}.mp4`);\r\n    doneCallBack(\"finished\");\r\n  }).catch(error => {\r\n    console.log(error)\r\n    doneCallBack(\"failed! :(\");\r\n\r\n  })\r\n}\r\n\r\nexport function directDownloadVideo(videoUrl, itag){\r\n  window.open(`${downloaderUrl}/downloadmp3?videolink=${videoUrl}${itag?`&format=${itag}`:\"\"}`, '_blank');\r\n}\r\n\r\n\r\nexport function downloadMp3(videoUrl, itag, name, metadata, mp3Data, progressCallback = (progress) => console.log(progress), doneCallBack = (progress) => console.log(progress)) {\r\n  axios({\r\n    url: `${downloaderUrl}/downloadmp3?videolink=${videoUrl}${itag?`&format=${itag}`:\"\"}`,\r\n    method: \"GET\",\r\n    responseType: \"arraybuffer\",\r\n    onDownloadProgress: metadata ? (progressEvent) => {\r\n      progressCallback(progressEvent.loaded)\r\n    } : null\r\n  }).then((response) => {\r\n\r\n\r\n    const writer = new ID3Writer(response.data);\r\n    if (mp3Data) {\r\n      const {\r\n        title,\r\n        artist,\r\n        cover\r\n      } = mp3Data;\r\n      if (title) writer.setFrame('TIT2', title)\r\n      if (artist) writer.setFrame('TPE1', [artist])\r\n      /* if (cover) {\r\n        console.log(cover)\r\n        getCorsImage(cover, (buffer)=>{\r\n          writer.setFrame('APIC', {\r\n            type: 3,\r\n            data: buffer,\r\n            description: 'cover'\r\n        })\r\n        })\r\n\r\n      } */\r\n    }\r\n    writer.addTag();\r\n\r\n    const blob = writer.getBlob();\r\n\r\n    saveAs(blob, name ? `${name}.mp3` : `music${Date.now()}.mp3`);\r\n    doneCallBack(\"finished\");\r\n  }).catch(error => {\r\n    console.log(error)\r\n    doneCallBack(\"failed! :(\");\r\n\r\n  })\r\n\r\n\r\n}\r\n\r\nexport function downloadMp3Fast(videoUrl, itag, name, metadata, mp3Data, progressCallback = (progress) => console.log(progress), doneCallBack = (progress) => console.log(progress)) {\r\n  axios({\r\n    url: `${downloaderUrl}/downloadmp3?videolink=${videoUrl}${itag?`&format=${itag}`:\"\"}`,\r\n    method: \"GET\",\r\n    responseType: \"arraybuffer\",\r\n    onDownloadProgress: metadata ? (progressEvent) => {\r\n      progressCallback(progressEvent.loaded)\r\n    } : null\r\n  }).then((response) => {\r\n\r\n\r\n    const writer = new ID3Writer(response.data);\r\n    if (mp3Data) {\r\n      const {\r\n        title,\r\n        artist,\r\n      } = mp3Data;\r\n      if (title) writer.setFrame('TIT2', title)\r\n      if (artist) writer.setFrame('TPE1', [artist])\r\n      \r\n    }\r\n    writer.addTag();\r\n\r\n    const blob = writer.getBlob();\r\n\r\n    saveAs(blob, name ? `${name}.mp3` : `music${Date.now()}.mp3`);\r\n    doneCallBack(\"finished\");\r\n  }).catch(error => {\r\n    console.log(error)\r\n    doneCallBack(\"failed! :(\");\r\n\r\n  })\r\n\r\n\r\n}\r\n\r\nexport function directDownloadMp3(videoUrl, itag){\r\n  window.open(`${downloaderUrl}/downloadmp3?videolink=${videoUrl}${itag?`&format=${itag}`:\"\"}`, '_blank');\r\n}\r\n\r\n\r\n\r\nfunction getCorsImage(url, cb) {\r\n  const link = `${downloadProxyUrl}?link=${url}`\r\n  fetch(link).then(response => {\r\n    if (!response.ok) {\r\n      throw new Error(response.statusText)\r\n    }\r\n\r\n    return response.arrayBuffer();\r\n  }).then(buffer => {\r\n    cb(buffer)\r\n  }).catch(e => console.log(e))\r\n}\r\n\r\n\r\nexport function getFileSize(videoUrl, itag) {\r\n  return axios({\r\n    url: `${downloaderUrl}/getsize?videolink=${videoUrl}${itag?`&format=${itag}`:\"\"}`,\r\n    method: \"GET\",\r\n  })\r\n}\r\n\r\nexport function searchVideo(query, page) {\r\n  return fetch(`${BASEURL}/search?q=${query}${page? \"&page=\"+page: \"\"}`)\r\n    .then(response => {\r\n      //console.log(response)\r\n      if (!response.ok) throw Error(response.statusText)\r\n      return response.json();\r\n    })\r\n}","import React, {useState, useEffect} from 'react'\r\n\r\nconst Searchbar = ({onSubmit, placeholder=\"SEARCH FOR YOUTUBE URL\", match}) => {\r\n    const [inputVal, setInputVal]=useState(\"\")\r\n    useEffect(() => {\r\n        if(match.params.query) setInputVal(decodeURIComponent(match.params.query));\r\n        else setInputVal(\"\");\r\n    }, [match.params.query])\r\n    return (\r\n        <form \r\n            onSubmit={(event) => {\r\n                    event.preventDefault(); \r\n                    onSubmit(inputVal);\r\n                }\r\n            } \r\n            id=\"searchbar\" \r\n            className=\"margin0Auto\"\r\n        >\r\n            <input value={inputVal} onChange={(event)=>setInputVal(event.target.value)} placeholder={placeholder} type=\"text\" id=\"searchText\" required />\r\n            <input type=\"submit\" value=\"SEARCH\" id=\"searchSubmit\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Searchbar\r\n","import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading centerText textUpper\">\r\n            LOADING...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport icon from '../img/coon.png'\r\n\r\nconst Banner = ({text=\"YOUTUBE COON\"}) => {\r\n    return (\r\n        <div id=\"banner\" className=\"centerText\">\r\n            <img alt=\"panda\" src={icon}/>\r\n            <h1>{text}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react'\r\n\r\nconst VideoCard = ({ thumbnail, title, length }) => {\r\n    return (\r\n        <div id=\"videoCard\">\r\n            <img src={thumbnail} alt=\"video thumbnail\" />\r\n            <h3>{title}</h3>\r\n            <p>duration: <strong>{length ? (length / 60).toFixed(2) : 0} minutes</strong></p>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoCard\r\n","import React from 'react'\r\n\r\n\r\n\r\nconst FormatItem = ({container, type, audioBitrate, qualityLabel, url, itag, onDownload }) => {\r\n    return (\r\n        <tr id=\"formatItem\">\r\n            <td id=\"format\">{type}</td>\r\n            <td id=\"quality\">{qualityLabel? qualityLabel : audioBitrate+\" bitrate\"}</td>\r\n            <td className=\"centerText\">\r\n                <a href={url}>\r\n                    SOURCE\r\n                </a>\r\n            </td>\r\n            <td className=\"pointer\">\r\n                <div onClick={()=>onDownload(itag, container)} id=\"download\">\r\n                    DOWNLOAD\r\n                </div> \r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default FormatItem\r\n","import React from 'react'\r\nimport FormatItem from './FormatItem'\r\n\r\n\r\nconst FormatList = ({formats=[], onDownload, convertMp3}) => {\r\n    return (\r\n        <tbody>\r\n            {formats.map((item, index) =>\r\n                <FormatItem onDownload={onDownload}  {...item} type={convertMp3? \"mp3\": item.type} key={`videoFormat_${index}`} />\r\n            )\r\n            }\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default FormatList\r\n","import React, { useState, useEffect } from 'react'\r\nimport FormatList from './FormatList'\r\n\r\nconst FormatSelect = ({ formatList = [], onDownload, onDownloadMp3 }) => {\r\n    console.log(Date.now())\r\n    const [formatTab, setFormatTab] = useState(\"video\");\r\n    const audioFormats = formatList.filter((item) => item.type.match(/^audio/))\r\n    const videoFormats = formatList.filter((item) => item.type.match(/^video/) && item.audioBitrate)\r\n    const videoOnlyFormats = formatList.filter((item) => item.type.match(/^video/) && !item.audioBitrate)\r\n    //console.log(videoOnlyFormats)\r\n    return (\r\n        <div id=\"formatSelect\">\r\n            <div id=\"tabSwitch\">\r\n                <div onClick={()=>setFormatTab(\"video\")} className={formatTab===\"video\"?\"activeTab\":\"inactiveTab\"}>VIDEO</div>\r\n                <div onClick={()=>setFormatTab(\"audio\")} className={formatTab===\"audio\"?\"activeTab\":\"inactiveTab\"}>AUDIO</div>\r\n                <div onClick={()=>setFormatTab(\"mp3\")} className={formatTab===\"mp3\"?\"activeTab\":\"inactiveTab\"}>MP3</div>\r\n                <div onClick={()=>setFormatTab(\"videoOnly\")} className={formatTab===\"videoOnly\"?\"activeTab\":\"inactiveTab\"}>VIDEO ONLY</div>\r\n            </div>\r\n            <table>\r\n                <thead>\r\n                    <tr id=\"tableHeader\">\r\n                        <th>FORMAT</th>\r\n                        <th>QUALITY</th>\r\n                        <th>LINK</th>\r\n                        <th>DOWNLOAD</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                {formatTab === \"video\" && <FormatList onDownload={onDownload}  formats={videoFormats} />}\r\n                {formatTab === \"audio\" && <FormatList onDownload={onDownload}  formats={audioFormats} />}\r\n                {formatTab === \"mp3\" && <FormatList convertMp3={true} onDownload={onDownloadMp3}  formats={audioFormats} />}\r\n                {formatTab === \"videoOnly\" && <FormatList onDownload={onDownload} formats={videoOnlyFormats} />}\r\n\r\n\r\n            </table>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FormatSelect\r\n","import React from 'react'\r\n\r\nconst Error = ({message, children}) => {\r\n    return (\r\n        <div className=\"errorMessage centerText textUpper\">\r\n            <p>{message}</p>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, {useEffect, useState} from 'react'\r\nimport {getVideoData} from '../api/api.js'\r\nimport Loading from './Loading'\r\nimport VideoCard from './VideoCard'\r\nimport FormatSelect from './FormatSelect.jsx'\r\nimport Error from './Error.jsx'\r\n\r\nconst VideoView = ({match, history, video, setVideo}) => {\r\n    const [error, setError]=useState(null);\r\n    const query=match.params.query;\r\n    useEffect(() => {\r\n        setVideo(null);\r\n        setError(null);\r\n        getVideoData(query).then(data=>setVideo(data)).catch(error=>setError(\"COULD NOT FIND VIDEO WITH THIS URL\"));\r\n    }, [query])\r\n\r\n    const onDownload=(itag, container)=>{\r\n        if(video.title && itag && container){\r\n            history.push(`/video/${query}/confirm/${itag}/${container}`)\r\n        }\r\n    }\r\n    const onDownloadMp3=(itag)=>{\r\n        if(video.title && itag){\r\n            history.push(`/video/${query}/confirm_mp3/${itag}`)\r\n        }\r\n    }\r\n\r\n\r\n    if(error) return <Error message={error}/>\r\n    if(!video) return <Loading/>\r\n    return (\r\n        <div id=\"videoView\">\r\n            <VideoCard thumbnail={video.thumbnail} title={video.title} length={video.length}/>\r\n            <FormatSelect onDownload={onDownload} onDownloadMp3={onDownloadMp3} formatList={video.formats}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoView\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Searchbar from './Searchbar'\r\nimport VideoCard from './VideoCard'\r\nimport VideoView from './VideoView'\r\nimport Banner from './Banner'\r\nimport {getYoutubeID} from './util'\r\n\r\n\r\nlet timeout=null;\r\n\r\nexport default ({ video, setVideo, history }) => {\r\n    const [searchState, setSearch]=useState(\"\");\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timeout)\r\n        };\r\n    }, [])\r\n\r\n    const showError=()=>{\r\n        setSearch(\"NOT A VALID URL OR ID\")\r\n        timeout=setTimeout(()=>{    \r\n            setSearch(\"\")\r\n        },3000)\r\n    }\r\n\r\n    const onSearchSubmit = (value) => {\r\n        if (value) {\r\n            const ytID=getYoutubeID(value);\r\n            if(ytID) return history.push(`/video/${ytID}`)\r\n            console.log(\"not a valid youtube url or id\");\r\n            showError();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"downloader\" className=\"inner\">\r\n            <Banner text={searchState? searchState : \"YOUTUBE COON <DL>\"}/>\r\n            <Route path={[\"/video/:query?\", \"/\"]}\r\n                render={({ match }) =>\r\n                    <Searchbar\r\n                        match={match}\r\n                        placeholder=\"ENTER VIDEO URL\"\r\n                        onSubmit={onSearchSubmit}\r\n                    />}\r\n            />\r\n            <Route path=\"/video/:query\" render={(props) => <VideoView video={video} setVideo={setVideo} {...props} />} />\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}